name: Test and build

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
          cache: 'gradle'

      - name: Migrate test database
        shell: bash
        run: |
          wget -qO- https://download.red-gate.com/maven/release/org/flywaydb/enterprise/flyway-commandline/9.22.3/flyway-commandline-9.22.3-linux-x64.tar.gz | tar -xvz
          sudo ln -s `pwd`/flyway-9.22.3/flyway /usr/local/bin
          psql --host localhost --username postgres < databases/create_databases.sql
          /usr/local/bin/flyway -user=starter -password=starter -url="jdbc:postgresql://localhost:5432/starter_test" -locations=filesystem:databases/starter migrate

      - name: Build all modules
        run: ./gradlew build

      - name: Run collector.jar on port 8080 in background
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/starter_test?user=starter&password=starter&sslmode=disable
        run: |
          java -jar applications/collector/build/libs/collector.jar --server.port=8080 &
          sleep 10

      - name: Run analyzer.jar on port 8081 in background
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/starter_test?user=starter&password=starter&sslmode=disable
        run: |
          java -jar applications/analyzer/build/libs/analyzer.jar --server.port=8081 &
          sleep 10

      - name: Run app.jar on port 8082 in background
        env:
          DATABASE_URL: jdbc:postgresql://localhost:5432/starter_test?user=starter&password=starter&sslmode=disable
        run: |
          java -jar applications/app/build/libs/app.jar --server.port=8082 &
          sleep 10

      - name: Test collector endpoint
        run: curl --fail http://localhost:8080 || (echo "Collector not responding" && exit 1)

      - name: Test analyzer endpoint
        run: curl --fail http://localhost:8081 || (echo "Analyzer not responding" && exit 1)

      - name: Test app endpoint
        run: curl --fail http://localhost:8082 || (echo "App not responding" && exit 1)
