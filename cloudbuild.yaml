options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # 1. Build the JAR using JDK 21 and Gradle (no Shadow)
  - name: 'eclipse-temurin:21'
    id: 'Build JAR'
    dir: 'applications/app'
    entrypoint: 'bash'
    args:
      - -c
      - |
        apt-get update && apt-get install -y wget unzip
        wget https://services.gradle.org/distributions/gradle-8.5-bin.zip
        unzip gradle-8.5-bin.zip
        export PATH=$$PATH:$(pwd)/gradle-8.5/bin
        gradle --version
        gradle clean build -x test --no-daemon

  # 2. Build the Docker image and tag with commit SHA
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'applications/app'
    args: [
      'build', '-t',
      'us-central1-docker.pkg.dev/$PROJECT_ID/app-images/kotlin-app:$SHORT_SHA',
      '.'
    ]

  # 3. Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'push',
      'us-central1-docker.pkg.dev/$PROJECT_ID/app-images/kotlin-app:$SHORT_SHA'
    ]

  # 4. Deploy to Cloud Run with proper secret handling
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run deploy kotlin-app \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/app-images/kotlin-app:$SHORT_SHA \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --add-cloudsql-instances s25-fse-team9:us-central1:gcp-cloud-starter \
          --set-env-vars DB_USER=starter \
          --set-env-vars DB_PASS=$$DB_PASS \
          --set-env-vars "DATABASE_URL=jdbc:postgresql:///starter_development?cloudSqlInstance=s25-fse-team9:us-central1:gcp-cloud-starter&socketFactory=com.google.cloud.sql.postgres.SocketFactory&user=starter&password=$$DB_PASS"
    secretEnv: ['DB_PASS']

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/DB_PASS/versions/latest
      env: 'DB_PASS'